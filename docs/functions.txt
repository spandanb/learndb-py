This document elaborates on what is a function in the scope of learndb, how they are modelled, defined, and evaluated
by the vm.

Function Arguments
------------------
functions can accept:
 - 0 args, e.g. current_time
 - scalar args, e.g. square(2)
 - or recordset args, e.g. any aggregation functions, e.g. max


Function Model
--------------
What is the interface of a function object?
    - determine the return type, e.g. when generating output schema
    - determine params, and validate args
    - evaluate function for a given set of args

How are functions represented?
Depends on function. There are two types of functions:
 1) native, i.e. those implemented in Python
 2) non-native, i.e. those implemented in learndb-sql.


We represent a function with the following object:

```
class FunctionDefinition:
    def __init__(self,
                 func_name: str,
                 pos_params: List[Union[Type[DataType], List[Type[DataType]]]],
                 named_params: Dict[str, Type[DataType]],
                 func_body: Callable,
                 return_type: Type[DataType]):
        ...
```

Every function

